version: 2.1


commands:
  print_pipeline_id:
    description: "A very simple command for demonstration purposes"
    parameters:
      to:
        type: string
        default: "Hello World"
    steps:
      - run: echo << parameters.to >>
orbs:
  welcome: circleci/welcome-orb@0.4.1

jobs:
  # say-hello:
    
  #   docker:
  #     - image: circleci/node:13.8.0
   
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Say hello"
  #         command: "echo Hello, World!"

  # say-world:
    
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Say world"
  #         command: "echo Hello, World!!"


  # TRIGGERING

  # print-name:
  #   docker:
  #     - image: cimg/base:2020.01
  #   steps:
  #     - checkout
  #     - run:
  #         name: "say my name"
  #         command: |
  #           echo $MY_ENV_VAR


  # SHARING FILES

  # save_hello_world_output:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run: echo "hello world" > ~/output.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - output.txt

  # print_output_file:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - attach_workspace:
  #         at: ~/
  #     - run: cat ~/output.txt


  # REUSABLE CODE
  # my_job:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - print_pipeline_id

  # JOB FAILURES
  failure_job:
     docker:
        - image: circleci/node:13.8.0
     steps:
      - run: exit 1

     

      - run:
          name: Upon error
          command: echo "ERROR!"
          when: on_fail  
  
      

workflows:
  say-hello-workflow:
    jobs:
      - failure_job
      # - my_job
      # - save_hello_world_output
      # - print_output_file:
      #     requires:
      #       - save_hello_world_output
      # - print-name
      # - welcome/run
      # - say-hello
      # - say-world:
      #    requires:
      #      - say-hello
